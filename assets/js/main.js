"use strict";document.addEventListener("DOMContentLoaded",(function(){try{var e=function(e){e.classList.remove("modal--active"),r.style.overflowY="",function(e){e.removeEventListener("keydown",t),e.removeEventListener("click",n)}(e)},t=function(t){var n=t.currentTarget;"Escape"===t.key&&e(n)},n=function(t){t.currentTarget.querySelector(".modal__content").contains(t.target)||e(t.currentTarget)},i=document.querySelectorAll("[data-modal]"),r=document.querySelector("body"),o=document.querySelectorAll("[data-modal-close]");i.forEach((function(e){e.addEventListener("click",(function(e){e.preventDefault();var i=e.target.closest("[data-modal]").getAttribute("data-modal"),o=document.getElementById(i);o&&(o.classList.add("modal--active"),r.style.overflow="hidden",function(e){e.addEventListener("keydown",t),e.addEventListener("click",n)}(o))}))})),o.forEach((function(t){t.addEventListener("click",(function(t){var n=t.target.closest(".modal");n&&e(n)}))}))}catch(e){}if(document.querySelector(".main-swiper"))new Swiper(".main-swiper",{direction:"horizontal",effect:"fade",loop:!0,speed:1e3,autoplay:{delay:2500,disableOnInteraction:!1},slidesPerView:1,navigation:{nextEl:".swiper-button-next-main",prevEl:".swiper-button-prev-main"}});if(document.querySelector(".swiper-products"))new Swiper(".swiper-products",{direction:"horizontal",loop:!0,slidesPerView:3,spaceBetween:20,pagination:{el:".swiper-pagination-products",type:"fraction"},breakpoints:{320:{slidesPerView:1.2,spaceBetween:8},640:{slidesPerView:3,spaceBetween:20}},navigation:{nextEl:".swiper-button-next-products",prevEl:".swiper-button-prev-products"}});if(document.querySelector(".swiper-history"))new Swiper(".swiper-history",{direction:"horizontal",loop:!1,slidesPerView:5,spaceBetween:45,centeredSlides:!1,breakpoints:{320:{slidesPerView:2,spaceBetween:17},640:{slidesPerView:5,spaceBetween:45}},navigation:{nextEl:".swiper-button-next-history",prevEl:".swiper-button-prev-history"}});if(document.querySelector(".swiper-diploms"))new Swiper(".swiper-diploms",{direction:"horizontal",loop:!1,slidesPerView:4,spaceBetween:20,centeredSlides:!1,breakpoints:{320:{slidesPerView:1.5,spaceBetween:9},640:{slidesPerView:4,spaceBetween:20}},navigation:{nextEl:".swiper-button-next-diploms",prevEl:".swiper-button-prev-diploms"}});if(document.querySelector(".swiper-addons"))new Swiper(".swiper-addons",{direction:"horizontal",loop:!0,slidesPerView:4,spaceBetween:20,breakpoints:{320:{slidesPerView:1.2,spaceBetween:8},640:{slidesPerView:4,spaceBetween:20}},navigation:{nextEl:".swiper-button-next-addons",prevEl:".swiper-button-prev-addons"}});function s(e,t,n){var i=t,r=0,o=Math.round(1500/(e/n)),s=setInterval((function(){(r+=n)==e&&clearInterval(s),i.innerHTML=r}),o)}document.getElementById("distr")&&function(e,t){function n(){1-e.getBoundingClientRect().bottom/(window.innerHeight+e.offsetHeight)>0&&(window.removeEventListener("resize",i),window.removeEventListener("scroll",i),t())}function i(e){n()}window.addEventListener("resize",i),window.addEventListener("scroll",i),n()}(document.getElementById("distr"),(function(){s(120,document.querySelector("#num1"),10),s(29,document.querySelector("#num2"),1),s(35e3,document.querySelector("#num3"),1e3)}));var c=document.querySelector("#burger"),d=document.querySelector("#close"),a=document.querySelector(".header-burger__menu");document.querySelector("body");c.addEventListener("click",(function(){a.classList.toggle("active")})),d.addEventListener("click",(function(){a.classList.toggle("active")})),document.querySelectorAll("[data-fancybox]")&&Fancybox.bind("[data-fancybox]",{})}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
