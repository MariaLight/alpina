"use strict";document.addEventListener("DOMContentLoaded",(function(){try{var e=function(e){e.classList.remove("modal--active"),i.style.overflowY="",function(e){e.removeEventListener("keydown",t),e.removeEventListener("click",n)}(e)},t=function(t){var n=t.currentTarget;"Escape"===t.key&&e(n)},n=function(t){t.currentTarget.querySelector(".modal__content").contains(t.target)||e(t.currentTarget)},r=document.querySelectorAll("[data-modal]"),i=document.querySelector("body"),o=document.querySelectorAll("[data-modal-close]");r.forEach((function(e){e.addEventListener("click",(function(e){e.preventDefault();var r=e.target.closest("[data-modal]").getAttribute("data-modal"),o=document.getElementById(r);o&&(o.classList.add("modal--active"),i.style.overflow="hidden",function(e){e.addEventListener("keydown",t),e.addEventListener("click",n)}(o))}))})),o.forEach((function(t){t.addEventListener("click",(function(t){var n=t.target.closest(".modal");n&&e(n)}))}))}catch(e){}if(document.querySelector(".main-swiper"))new Swiper(".main-swiper",{direction:"horizontal",effect:"fade",loop:!0,speed:1e3,autoplay:{delay:2500,disableOnInteraction:!1},slidesPerView:1,navigation:{nextEl:".swiper-button-next-main",prevEl:".swiper-button-prev-main"}});if(document.querySelector(".swiper-products"))new Swiper(".swiper-products",{direction:"horizontal",loop:!0,slidesPerView:3,spaceBetween:20,pagination:{el:".swiper-pagination-products",type:"fraction"},breakpoints:{320:{slidesPerView:1.2,spaceBetween:8},640:{slidesPerView:3,spaceBetween:20}},navigation:{nextEl:".swiper-button-next-products",prevEl:".swiper-button-prev-products"}});if(document.querySelector(".swiper-history"))new Swiper(".swiper-history",{direction:"horizontal",loop:!1,slidesPerView:5,spaceBetween:45,centeredSlides:!1,breakpoints:{320:{slidesPerView:2,spaceBetween:17},640:{slidesPerView:5,spaceBetween:45}},navigation:{nextEl:".swiper-button-next-history",prevEl:".swiper-button-prev-history"}});if(document.querySelector(".swiper-diploms"))new Swiper(".swiper-diploms",{direction:"horizontal",loop:!1,slidesPerView:4,spaceBetween:20,centeredSlides:!1,breakpoints:{320:{slidesPerView:1.5,spaceBetween:9},640:{slidesPerView:4,spaceBetween:20}},navigation:{nextEl:".swiper-button-next-diploms",prevEl:".swiper-button-prev-diploms"}});function c(e,t,n){var r=t,i=0,o=Math.round(1500/(e/n)),c=setInterval((function(){(i+=n)==e&&clearInterval(c),r.innerHTML=i}),o)}document.getElementById("distr")&&function(e,t){function n(){1-e.getBoundingClientRect().bottom/(window.innerHeight+e.offsetHeight)>0&&(window.removeEventListener("resize",r),window.removeEventListener("scroll",r),t())}function r(e){n()}window.addEventListener("resize",r),window.addEventListener("scroll",r),n()}(document.getElementById("distr"),(function(){c(120,document.querySelector("#num1"),10),c(29,document.querySelector("#num2"),1),c(35e3,document.querySelector("#num3"),1e3)}));var s=document.querySelector("#burger"),d=document.querySelector("#close"),a=document.querySelector(".header-burger__menu");document.querySelector("body");s.addEventListener("click",(function(){a.classList.toggle("active")})),d.addEventListener("click",(function(){a.classList.toggle("active")})),document.querySelectorAll("[data-fancybox]")&&Fancybox.bind("[data-fancybox]",{})}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiYnRuIiwiZSIsInByZXZlbnREZWZhdWx0IiwiYm9keSIsInN0eWxlIiwibW9kYWxJZCIsInRhcmdldCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJxdWVyeVNlbGVjdG9yIiwib25Nb2RhbEtleURvd24iLCJidG5DbG9zZSIsInJlbW92ZU1vZGFsRXZlbnRMaXN0ZW5lcnMiLCJnZXRFbGVtZW50QnlJZCIsIm92ZXJmbG93IiwiYWRkTW9kYWxFdmVudExpc3RlbmVycyIsImtleSIsImNsb3NlTW9kYWwiLCJtb2RhbCIsImNsb3NlIiwiY29udGFpbnMiLCJidG5zIiwiZm9yRWFjaCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjbG9zZXN0IiwiZ2V0QXR0cmlidXRlIiwib25Nb2RhbENsaWNrIiwiY2xhc3NMaXN0IiwiYWRkIiwiY3VycmVudFRhcmdldCIsIm1haW5Td2lwZXIiLCJlZmZlY3QiLCJkaXJlY3Rpb24iLCJTd2lwZXIiLCJzcGVlZCIsImF1dG9wbGF5IiwiZGVsYXkiLCJkaXNhYmxlT25JbnRlcmFjdGlvbiIsInNsaWRlc1BlclZpZXciLCJuYXZpZ2F0aW9uIiwicHJldkVsIiwibmV4dEVsIiwibG9vcCIsInNwYWNlQmV0d2VlbiIsInBhZ2luYXRpb24iLCJlbCIsInR5cGUiLCJicmVha3BvaW50cyIsImNlbnRlcmVkU2xpZGVzIiwiaW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsIm4iLCJjbGVhckludGVydmFsIiwic3RlcCIsImlubmVySFRNTCIsIm51bSIsIm9uU2Nyb2xsZWRUbyIsInQiLCJvdXROdW0iLCJlUiIsImJvdHRvbSIsImNhbGxiYWNrIiwid2luZG93Iiwibm9ybU9mZnNldCIsImlubmVySGVpZ2h0Iiwib25VcGRhdGUiLCJvZmZzZXRIZWlnaHQiLCJ0YXNrVXBkYXRlIiwiYnVyZ2VyQnRuIiwiYnVyZ2VyTWVudSIsInRvZ2dsZSIsImJ1cmdlckNsb3Nl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cmNlc0NvbnRlbnQiOlsiXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBidG5zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtbW9kYWxdJyk7XHJcbiAgICAgICAgY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcclxuICAgICAgICBjb25zdCBidG5DbG9zZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLW1vZGFsLWNsb3NlXScpO1xyXG5cclxuICAgICAgICBidG5zLmZvckVhY2goYnRuID0+IHtcclxuICAgICAgICAgICAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XHJcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBtb2RhbElkID0gZS50YXJnZXQuY2xvc2VzdCgnW2RhdGEtbW9kYWxdJykuZ2V0QXR0cmlidXRlKCdkYXRhLW1vZGFsJyk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBtb2RhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG1vZGFsSWQpO1xyXG4gICAgICAgICAgICAgICAgaWYgKG1vZGFsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbW9kYWwuY2xhc3NMaXN0LmFkZCgnbW9kYWwtLWFjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcclxuICAgICAgICAgICAgICAgICAgICBhZGRNb2RhbEV2ZW50TGlzdGVuZXJzKG1vZGFsKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGJ0bkNsb3NlLmZvckVhY2goY2xvc2UgPT4ge1xyXG4gICAgICAgICAgICBjbG9zZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgbW9kYWwgPSBlLnRhcmdldC5jbG9zZXN0KCcubW9kYWwnKTtcclxuICAgICAgICAgICAgICAgIGlmIChtb2RhbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNsb3NlTW9kYWwobW9kYWwpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gYWRkTW9kYWxFdmVudExpc3RlbmVycyhtb2RhbCkge1xyXG4gICAgICAgICAgICBtb2RhbC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgb25Nb2RhbEtleURvd24pO1xyXG4gICAgICAgICAgICBtb2RhbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9uTW9kYWxDbGljayk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiByZW1vdmVNb2RhbEV2ZW50TGlzdGVuZXJzKG1vZGFsKSB7XHJcbiAgICAgICAgICAgIG1vZGFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBvbk1vZGFsS2V5RG93bik7XHJcbiAgICAgICAgICAgIG1vZGFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgb25Nb2RhbENsaWNrKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGNsb3NlTW9kYWwobW9kYWwpIHtcclxuICAgICAgICAgICAgbW9kYWwuY2xhc3NMaXN0LnJlbW92ZSgnbW9kYWwtLWFjdGl2ZScpO1xyXG4gICAgICAgICAgICBib2R5LnN0eWxlLm92ZXJmbG93WSA9ICcnO1xyXG4gICAgICAgICAgICByZW1vdmVNb2RhbEV2ZW50TGlzdGVuZXJzKG1vZGFsKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIG9uTW9kYWxLZXlEb3duKGUpIHtcclxuICAgICAgICAgICAgY29uc3QgbW9kYWwgPSBlLmN1cnJlbnRUYXJnZXQ7XHJcbiAgICAgICAgICAgIGlmIChlLmtleSA9PT0gJ0VzY2FwZScpIHtcclxuICAgICAgICAgICAgICAgIGNsb3NlTW9kYWwobW9kYWwpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBvbk1vZGFsQ2xpY2soZSkge1xyXG4gICAgICAgICAgICBjb25zdCBtb2RhbENvbnRlbnQgPSBlLmN1cnJlbnRUYXJnZXQucXVlcnlTZWxlY3RvcignLm1vZGFsX19jb250ZW50Jyk7XHJcbiAgICAgICAgICAgIGlmICghbW9kYWxDb250ZW50LmNvbnRhaW5zKGUudGFyZ2V0KSkge1xyXG4gICAgICAgICAgICAgICAgY2xvc2VNb2RhbChlLmN1cnJlbnRUYXJnZXQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG5cclxuICAgIH1cclxuICAgIGxldCBtYWluU3dpcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW4tc3dpcGVyJyk7XHJcbiAgICBpZiAobWFpblN3aXBlcikge1xyXG4gICAgICAgIGNvbnN0IHN3aXBlck1haW4gPSBuZXcgU3dpcGVyKCcubWFpbi1zd2lwZXInLCB7XHJcbiAgICAgICAgICAgIGRpcmVjdGlvbjogJ2hvcml6b250YWwnLFxyXG4gICAgICAgICAgICBlZmZlY3Q6IFwiZmFkZVwiLFxyXG4gICAgICAgICAgICBsb29wOiB0cnVlLFxyXG4gICAgICAgICAgICBzcGVlZDogMTAwMCxcclxuICAgICAgICAgICAgYXV0b3BsYXk6IHtcclxuICAgICAgICAgICAgICAgIGRlbGF5OiAyNTAwLFxyXG4gICAgICAgICAgICAgICAgZGlzYWJsZU9uSW50ZXJhY3Rpb246IGZhbHNlLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiAxLFxyXG4gICAgICAgICAgICBuYXZpZ2F0aW9uOiB7XHJcbiAgICAgICAgICAgICAgICBuZXh0RWw6ICcuc3dpcGVyLWJ1dHRvbi1uZXh0LW1haW4nLFxyXG4gICAgICAgICAgICAgICAgcHJldkVsOiAnLnN3aXBlci1idXR0b24tcHJldi1tYWluJyxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGxldCBwcm9kdWN0c1N3aXBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zd2lwZXItcHJvZHVjdHMnKTtcclxuICAgIGlmIChwcm9kdWN0c1N3aXBlcikge1xyXG4gICAgICAgIGNvbnN0IHN3aXBlclByb2R1Y3RzID0gbmV3IFN3aXBlcignLnN3aXBlci1wcm9kdWN0cycsIHtcclxuICAgICAgICAgICAgZGlyZWN0aW9uOiAnaG9yaXpvbnRhbCcsXHJcbiAgICAgICAgICAgIGxvb3A6IHRydWUsXHJcbiAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDMsXHJcbiAgICAgICAgICAgIHNwYWNlQmV0d2VlbjogMjAsXHJcbiAgICAgICAgICAgIHBhZ2luYXRpb246IHtcclxuICAgICAgICAgICAgICAgIGVsOiAnLnN3aXBlci1wYWdpbmF0aW9uLXByb2R1Y3RzJyxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdmcmFjdGlvbidcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgYnJlYWtwb2ludHM6IHtcclxuICAgICAgICAgICAgICAgIDMyMDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDEuMixcclxuICAgICAgICAgICAgICAgICAgICBzcGFjZUJldHdlZW46IDgsXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgNjQwOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMyxcclxuICAgICAgICAgICAgICAgICAgICBzcGFjZUJldHdlZW46IDIwLFxyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgIG5hdmlnYXRpb246IHtcclxuICAgICAgICAgICAgICAgIG5leHRFbDogJy5zd2lwZXItYnV0dG9uLW5leHQtcHJvZHVjdHMnLFxyXG4gICAgICAgICAgICAgICAgcHJldkVsOiAnLnN3aXBlci1idXR0b24tcHJldi1wcm9kdWN0cycsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBsZXQgaGlzdG9yeVN3aXBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zd2lwZXItaGlzdG9yeScpO1xyXG4gICAgaWYgKGhpc3RvcnlTd2lwZXIpIHtcclxuICAgICAgICBjb25zdCBzd2lwZXJIaXN0b3J5ID0gbmV3IFN3aXBlcignLnN3aXBlci1oaXN0b3J5Jywge1xyXG4gICAgICAgICAgICBkaXJlY3Rpb246ICdob3Jpem9udGFsJyxcclxuICAgICAgICAgICAgbG9vcDogZmFsc2UsXHJcbiAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDUsXHJcbiAgICAgICAgICAgIHNwYWNlQmV0d2VlbjogNDUsXHJcbiAgICAgICAgICAgIGNlbnRlcmVkU2xpZGVzOiBmYWxzZSxcclxuICAgICAgICAgICAgYnJlYWtwb2ludHM6IHtcclxuICAgICAgICAgICAgICAgIDMyMDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgc3BhY2VCZXR3ZWVuOiAxNyxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICA2NDA6IHtcclxuICAgICAgICAgICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiA1LFxyXG4gICAgICAgICAgICAgICAgICAgIHNwYWNlQmV0d2VlbjogNDUsXHJcblxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgbmF2aWdhdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgbmV4dEVsOiAnLnN3aXBlci1idXR0b24tbmV4dC1oaXN0b3J5JyxcclxuICAgICAgICAgICAgICAgIHByZXZFbDogJy5zd2lwZXItYnV0dG9uLXByZXYtaGlzdG9yeScsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBsZXQgZGlwbG9tYXNTd2lwZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3dpcGVyLWRpcGxvbXMnKTtcclxuICAgIGlmIChkaXBsb21hc1N3aXBlcikge1xyXG4gICAgICAgIGNvbnN0IHN3aXBlckRpcGxvbWFzID0gbmV3IFN3aXBlcignLnN3aXBlci1kaXBsb21zJywge1xyXG4gICAgICAgICAgICBkaXJlY3Rpb246ICdob3Jpem9udGFsJyxcclxuICAgICAgICAgICAgbG9vcDogZmFsc2UsXHJcbiAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDQsXHJcbiAgICAgICAgICAgIHNwYWNlQmV0d2VlbjogMjAsXHJcbiAgICAgICAgICAgIGNlbnRlcmVkU2xpZGVzOiBmYWxzZSxcclxuICAgICAgICAgICAgYnJlYWtwb2ludHM6IHtcclxuICAgICAgICAgICAgICAgIDMyMDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDEuNSxcclxuICAgICAgICAgICAgICAgICAgICBzcGFjZUJldHdlZW46IDksXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgNjQwOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogNCxcclxuICAgICAgICAgICAgICAgICAgICBzcGFjZUJldHdlZW46IDIwLFxyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgbmF2aWdhdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgbmV4dEVsOiAnLnN3aXBlci1idXR0b24tbmV4dC1kaXBsb21zJyxcclxuICAgICAgICAgICAgICAgIHByZXZFbDogJy5zd2lwZXItYnV0dG9uLXByZXYtZGlwbG9tcycsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGNvbnN0IHRpbWUgPSAxNTAwO1xyXG5cclxuICAgIGZ1bmN0aW9uIG91dE51bShudW0sIGVsZW0sIHN0ZXApIHtcclxuICAgICAgICBsZXQgZSA9IGVsZW07XHJcbiAgICAgICAgbGV0IG4gPSAwO1xyXG4gICAgICAgIGxldCB0ID0gTWF0aC5yb3VuZCh0aW1lIC8gKG51bSAvIHN0ZXApKTtcclxuICAgICAgICBsZXQgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcbiAgICAgICAgICAgIG4gPSBuICsgc3RlcDtcclxuICAgICAgICAgICAgaWYgKG4gPT0gbnVtKSB7XHJcbiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlLmlubmVySFRNTCA9IG47XHJcbiAgICAgICAgfSwgdCk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gb25TY3JvbGxlZFRvKGVsLCBjYWxsYmFjaykge1xyXG5cclxuICAgICAgICBmdW5jdGlvbiBub3JtT2Zmc2V0KCkge1xyXG4gICAgICAgICAgICB2YXIgZVIgPSBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICAgICAgcmV0dXJuIDEuMCAtIGVSLmJvdHRvbSAvICh3aW5kb3cuaW5uZXJIZWlnaHQgKyBlbC5vZmZzZXRIZWlnaHQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmdW5jdGlvbiB0YXNrVXBkYXRlKCkge1xyXG4gICAgICAgICAgICBpZiAobm9ybU9mZnNldCgpID4gMCkge1xyXG4gICAgICAgICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIG9uVXBkYXRlKTtcclxuICAgICAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBvblVwZGF0ZSk7XHJcbiAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBvblVwZGF0ZShldmVudCkge1xyXG4gICAgICAgICAgICB0YXNrVXBkYXRlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vINCX0LDQv9GD0YHQuiDQt9Cw0LTQsNGH0LhcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgb25VcGRhdGUpO1xyXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBvblVwZGF0ZSk7XHJcbiAgICAgICAgdGFza1VwZGF0ZSgpO1xyXG4gICAgfVxyXG4gICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXN0cicpKSB7XHJcbiAgICAgICAgb25TY3JvbGxlZFRvKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXN0cicpLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIG91dE51bSgxMjAsIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbnVtMVwiKSwgMTApO1xyXG4gICAgICAgICAgICBvdXROdW0oMjksIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbnVtMlwiKSwgMSk7XHJcbiAgICAgICAgICAgIG91dE51bSgzNTAwMCwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNudW0zXCIpLCAxMDAwKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgbGV0IGJ1cmdlckJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNidXJnZXInKTtcclxuICAgIC8vIGxldCBidXJnZXJPcGVuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI29wZW4nKTtcclxuICAgIGxldCBidXJnZXJDbG9zZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjbG9zZScpO1xyXG4gICAgbGV0IGJ1cmdlck1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyLWJ1cmdlcl9fbWVudScpO1xyXG4gICAgbGV0IGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5Jyk7XHJcblxyXG4gICAgYnVyZ2VyQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGJ1cmdlck1lbnUuY2xhc3NMaXN0LnRvZ2dsZSgnYWN0aXZlJyk7XHJcbiAgICB9KVxyXG4gICAgYnVyZ2VyQ2xvc2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgYnVyZ2VyTWVudS5jbGFzc0xpc3QudG9nZ2xlKCdhY3RpdmUnKTtcclxuICAgIH0pXHJcblxyXG4gICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWZhbmN5Ym94XScpKSB7XHJcbiAgICAgICAgRmFuY3lib3guYmluZChcIltkYXRhLWZhbmN5Ym94XVwiLCB7XHJcbiAgICAgICAgICAgIC8vIFlvdXIgY3VzdG9tIG9wdGlvbnNcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbn0pXHJcblxyXG4iXX0=
